{"version":3,"sources":["redux/todo/constants.js","redux/todo/todo-reducer.js","redux/store.js","components/todo-input/todo-input.js","components/todo-item/todo-item.js","components/todo-list/todo-list.js","components/footer/footer.js","containers/todo/todo.js","redux/todo/todo-actions.js","App.js","index.js"],"names":["ADD_TASK","REMOVE_TASK","COMPLETE_TASK","CHANGE_FILTER","TASKS","load","namespace","tasks","length","rootReducer","combineReducers","state","id","text","isCompleted","type","filter","task","map","filters","activeFilter","composeEnhancers","compose","store","createStore","applyMiddleware","save","ToDoInput","value","onChange","onKeyPress","className","placeholder","defaultProps","ToDoItem","removeTask","completeTask","onClick","ToDoList","tasksList","FILTERS_BTN","Footer","changeFilter","ToDo","taskText","handleInputChange","target","setState","addTask","key","props","uuidv4","filterTasks","this","isTasksExist","filteredTasks","Component","connect","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.587af5b3.chunk.js","sourcesContent":["export const ADD_TASK = 'ADD_TASK';\nexport const REMOVE_TASK = 'REMOVE_TASK';\nexport const COMPLETE_TASK = 'COMPLETE_TASK';\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\n","import { combineReducers } from 'redux';\nimport { load } from 'redux-localstorage-simple';\nimport { ADD_TASK, REMOVE_TASK, COMPLETE_TASK, CHANGE_FILTER } from './constants';\n\nlet TASKS = load({ namespace: 'todo-list' });\n\nif (!TASKS || !TASKS.tasks || !TASKS.tasks.length) {\n  TASKS = {\n    tasks: [],\n  };\n}\n\nconst tasks = (state = TASKS.tasks, { id, text, isCompleted, type }) => {\n  switch (type) {\n\n    case ADD_TASK:\n      return [\n        ...state, {\n          id,\n          text,\n          isCompleted,\n        }\n      ];\n\n    case REMOVE_TASK:\n      return [...state].filter(task => task.id !== id);\n\n    case COMPLETE_TASK:\n      return [...state].map(task => {\n        if (task.id === id) {\n          task.isCompleted = !task.isCompleted;\n        }\n        return task;\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst filters = (state = 'all', { type, activeFilter }) => {\n  switch (type) {\n\n    case CHANGE_FILTER:\n      return activeFilter;\n\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({ tasks, filters });\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport rootReducer from './todo/todo-reducer';\nimport { save } from 'redux-localstorage-simple';\n\nconst composeEnhancers =\n  process.env.NODE_ENV !== 'production' &&\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\n\nconst configureStore = () => (\n  createStore(\n    rootReducer,\n    composeEnhancers(\n      applyMiddleware(save({ namespace: 'todo-list' }))\n    ),\n  )\n);\n\nconst store = configureStore();\n\nexport default store;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './todo-input.css';\r\n\r\nconst ToDoInput = ({ value, onChange, onKeyPress }) => (\r\n  <div className=\"todo-input-wrapper\">\r\n    <i className=\"fas fa-plus\" />\r\n    <input\r\n      className=\"todo-input\"\r\n      placeholder=\"Добавить заметку\"\r\n      onChange={onChange}\r\n      value={value}\r\n      onKeyPress={onKeyPress}\r\n    />\r\n  </div>\r\n);\r\n\r\nToDoInput.propTypes = {\r\n  onChange: PropTypes.func,\r\n  onKeyPress: PropTypes.func,\r\n  value: PropTypes.string,\r\n};\r\n\r\nToDoInput.defaultProps = {\r\n  value: '',\r\n};\r\n\r\nexport default ToDoInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './todo-item.css';\r\n\r\nconst ToDoItem = ({ text, isCompleted, removeTask, id, completeTask }) => (\r\n  <li className=\"todo-item\">\r\n    <i onClick={() => completeTask(id)} className={isCompleted ? 'mark far fa-check-circle' : 'mark far fa-circle'} />\r\n    <span className={isCompleted ? 'completed text' : 'text'}>{text}</span>\r\n    <i onClick={() => removeTask(id)} className=\"fas fa-times\" />\r\n  </li>\r\n);\r\n\r\nToDoItem.propTypes = {\r\n  text: PropTypes.string,\r\n  isCompleted: PropTypes.bool,\r\n  removeTask: PropTypes.func,\r\n  id: PropTypes.number,\r\n};\r\n\r\nToDoItem.defaultProps = {\r\n  text: '',\r\n  isCompleted: false,\r\n  id: 0,\r\n};\r\n\r\nexport default ToDoItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ToDoItem from '../todo-item/todo-item';\r\n\r\nimport './todo-list.css';\r\n\r\nconst ToDoList = ({ tasksList, removeTask, completeTask }) => (\r\n  <ul className=\"todo-list\">\r\n    {tasksList.map(({ id, text, isCompleted }) => (\r\n      <ToDoItem completeTask={completeTask} removeTask={removeTask} id={id} key={id} text={text} isCompleted={isCompleted} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nToDoList.propTypes = {\r\n  tasksList: PropTypes.array,\r\n  removeTask: PropTypes.func,\r\n  completeTask: PropTypes.func,\r\n};\r\n\r\nToDoList.defaultProps = {\r\n  tasksList: [],\r\n};\r\n\r\nexport default ToDoList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './footer.css';\r\n\r\nconst FILTERS_BTN = [\r\n  {\r\n    text: 'Все',\r\n    id: 'all',\r\n  },\r\n  {\r\n    text: 'Активные',\r\n    id: 'active',\r\n  },\r\n  {\r\n    text: 'Готовые',\r\n    id: 'completed'\r\n  }\r\n];\r\n\r\nconst Footer = ({ activeFilter, changeFilter }) => (\r\n  <div className=\"footer\">\r\n    <div className=\"btn-group\">\r\n      {FILTERS_BTN.map(({ text, id }) => (\r\n        <button\r\n          onClick={() => { changeFilter(id); }}\r\n          key={id}\r\n          className={id === activeFilter ? \"filter-btn active\" : 'filter-btn'}\r\n        >{text}</button>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nFooter.propTypes = {\r\n  activeFilter: PropTypes.string,\r\n  changeFilter: PropTypes.func,\r\n};\r\n\r\nFooter.defaultProps = {\r\n  activeFilter: 'all',\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addTask, removeTask, completeTask, changeFilter } from '../../redux/todo/todo-actions';\r\n\r\nimport ToDoInput from '../../components/todo-input/todo-input';\r\nimport ToDoList from '../../components/todo-list/todo-list';\r\nimport Footer from '../../components/footer/footer';\r\n\r\nimport './todo.css';\r\n\r\nclass ToDo extends Component {\r\n\r\n  state = {\r\n    taskText: '',\r\n  };\r\n\r\n  handleInputChange = ({ target: { value } }) => {\r\n    this.setState({\r\n      taskText: value,\r\n    });\r\n  };\r\n\r\n  addTask = ({ key }) => {\r\n    const { taskText } = this.state;\r\n\r\n    if (taskText.length >= 1 && key === 'Enter') {\r\n      const { addTask } = this.props;\r\n      addTask(uuidv4(), taskText, false);\r\n      this.setState({\r\n        taskText: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  filterTasks = (tasks, activeFilter) => {\r\n    switch (activeFilter) {\r\n      case 'completed':\r\n        return tasks.filter(task => task.isCompleted);\r\n      case 'active':\r\n        return tasks.filter(task => !task.isCompleted);\r\n      default:\r\n        return tasks;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { taskText } = this.state;\r\n    const { tasks, removeTask, completeTask, filters, changeFilter } = this.props;\r\n    const isTasksExist = tasks && tasks.length > 0;\r\n    const filteredTasks = this.filterTasks(tasks, filters);\r\n\r\n    return (\r\n      <div className=\"todo-wrapper\">\r\n        <ToDoInput onKeyPress={this.addTask} onChange={this.handleInputChange} value={taskText} />\r\n        {isTasksExist && <ToDoList completeTask={completeTask} tasksList={filteredTasks} removeTask={removeTask} />}\r\n        {isTasksExist && <Footer changeFilter={changeFilter} activeFilter={filters} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(({ tasks, filters }) => ({\r\n  tasks,\r\n  filters,\r\n}), { addTask, removeTask, completeTask, changeFilter })(ToDo);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//\r\n","import { ADD_TASK, REMOVE_TASK, COMPLETE_TASK, CHANGE_FILTER } from './constants';\n\nexport const addTask = (id, text, isCompleted) => ({\n  type: ADD_TASK,\n  id,\n  text,\n  isCompleted\n});\n\nexport const removeTask = id => ({\n  type: REMOVE_TASK,\n  id\n});\n\nexport const completeTask = id => ({\n  type: COMPLETE_TASK,\n  id\n});\n\nexport const changeFilter = activeFilter => ({\n  type: CHANGE_FILTER,\n  activeFilter,\n});\n","import React, { Fragment } from 'react';\nimport Todo from './containers/todo/todo';\n\nconst App = () => (\n  <Fragment>\n    <Todo />\n  </Fragment>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render((\n  <Provider store={store}>\n    <App />\n  </Provider>\n), document.getElementById('root'));\n"],"sourceRoot":""}